<?xml version="1.0" encoding="utf-8"?>
<configuration>
  
  <!-- //Version RC 3.5 -->

  <!-- This is required for the widget to be able to connect to the AMS Native API Web Service -->
  <!-- If the AMS Native API Web Service is not on the default path, then the <endpoint> element below needs to be changed accordingly -->
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IAMSIntegrationService" maxReceivedMessageSize="20000000" maxBufferSize="20000000" maxBufferPoolSize="20000000"/>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost/SITAAMSIntegrationService/v2/SITAAMSIntegrationService" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAMSIntegrationService" contract="IAMSIntegrationService" name="BasicHttpBinding_IAMSIntegrationService"/>
    </client>
  </system.serviceModel>
  
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2"/>
    </startup>

  <appSettings>
    <add key="IATAAirportCode" value="DOH" /> <!-- IATA Code for the airport used in constructing the RestAPI URL -->
    <add key="ICAOAirportCode" value="OTHH" />  <!-- ICAO Code for the Airport, used in the WebServices call to write to the custom field-->

    <!--Token for Dave's Machine -->
  <!-- <add key="Token" value="b406564f-44aa-4e51-a80a-aa9ed9a04ec6" /> -->

    <!-- Token for Romains's Machine -->
   <add key="Token" value="5eecde59-6f87-4d6f-8544-fb9f9fe0e511" />  <!-- AMS API token to access the AMS (generated and assigned by AMS admin -->
    
    <add key="AlertField" value="B---_TowingNotStarted" /> <!-- Custom field external name to write the flag to -->
    <add key="BaseURI" value="http://localhost:80/api/v1/" /> <!-- The base URL for the AMS Rest API server for the Towing interface. The complete URI is constructed in code using derived parameters-->
    <add key="NotificationQueue" value=".\private$\towalert" /> <!-- MSMQ queue to listen to for tow event notifications-->
    <add key="GracePeriod" value="10000"/>  <!-- Time in milliseconds after the SchedStart that the alert will be sent (can be zero) -->
    <add key="RefreshInterval" value="30000"/> <!-- Interval in milliseconds between complete refreshes of the towing cache (should be in the order of hours) -->
    <add key="FromHours" value="-12"/> <!-- Time from NOW in hours to for the lower limit of the tow event cache -->
    <add key="ToHours" value="48"/>    <!-- Time from NOW in hours to for the upper limit of the tow event cache -->
    <add key ="ResetServerRetryInterval" value="5000"/> <!-- Time in milliseconds to try to connect to the AMS Rest API Server if it is not available -->
    <add key ="StartUpFlightProcessing" value ="True"/>
    
    <!-- Below can be used to overwrite the defaults for the key parameters when run as a service-->  
    <!-- 
    <add key="ServiceName" value="SITAAMSTowNotStarted"/>
    <add key="ServiceDisplayName" value="SITA AMS - Tow Not Started Utility Service"/>
    <add key="ServiceDescription" value="Writes to a custom field on the arrival and departure flight if a towing has not started by the schedued time"/>
     -->
    
  </appSettings>
</configuration>
